name: Build APK Simple

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install flet==0.24.1
        pip install pillow
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.0'
        channel: 'stable'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Create required files
      run: |
        # Ensure all JSON files exist
        echo '[]' > quotes.json
        echo '{}' > settings.json
        echo '{}' > user_preferences.json
        echo '[]' > clients.json
        echo '[]' > projects.json
        echo '[]' > materials.json
        echo '[]' > printers.json
        echo '[]' > tasks.json
        echo '[]' > budgets.json
        echo '[]' > transactions.json
        echo '[]' > analytics.json
        
        # Create icon if missing
        mkdir -p assets
        if [ ! -f assets/icon.png ]; then
          python -c "
from PIL import Image, ImageDraw
img = Image.new('RGBA', (512, 512), (33, 150, 243, 255))
draw = ImageDraw.Draw(img)
draw.text((200, 240), '3D', fill='white')
img.save('assets/icon.png')
"
        fi
    
    - name: Build APK
      run: |
        echo "=== Starting Flet Build ==="
        flet build apk --verbose 2>&1 | tee build.log
        echo "=== Build completed ==="
    
    - name: Find Flutter project
      run: |
        echo "=== Looking for Flutter project ==="
        find /tmp -name "flet_flutter_build*" -type d 2>/dev/null | head -1 > flutter_dir.txt
        if [ -s flutter_dir.txt ]; then
          FLUTTER_DIR=$(cat flutter_dir.txt)
          echo "Found Flutter project at: $FLUTTER_DIR"
          cd "$FLUTTER_DIR"
          
          echo "=== Trying direct Flutter build ==="
          flutter clean
          flutter pub get
          flutter build apk --debug --no-tree-shake-icons || true
          
          echo "=== Looking for generated APK ==="
          find . -name "*.apk" -type f
          
          # Copy any APK found
          if [ -f build/app/outputs/flutter-apk/app-debug.apk ]; then
            cp build/app/outputs/flutter-apk/app-debug.apk $GITHUB_WORKSPACE/calculadora-3d.apk
          elif [ -f build/app/outputs/apk/debug/app-debug.apk ]; then
            cp build/app/outputs/apk/debug/app-debug.apk $GITHUB_WORKSPACE/calculadora-3d.apk
          fi
        fi
    
    - name: Check for APK
      run: |
        echo "=== Checking workspace for APK ==="
        ls -la *.apk 2>/dev/null || echo "No APK in workspace"
        
        echo "=== Checking build directories ==="
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
    
    - name: Upload any APK found
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: apk-output
        path: |
          *.apk
          build/**/*.apk
          /tmp/flet_flutter_build*/build/**/*.apk
        if-no-files-found: warn
    
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs
        path: |
          build.log
          flutter_dir.txt
